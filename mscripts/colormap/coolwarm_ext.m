function map = coolwarm_ext(m)
%COOLWARM cool-warm color map
%   COOLWARM(M) returns an M-by-3 matrix containing a colormap with cool-to-warm
%   colors, as commonly used in Paraview.
%   COOLWARM, by itself, is the same length as the current colormap.
%
%   For example, to reset the colormap of the current figure:
%
%             colormap(coolwarm)
%
%   Colormap is based on the colors used by the freeware program Paraview.
%   The color table used here is CoolWarmUChar33.csv, from
%   http://www.sandia.gov/~kmorel/documents/ColorMaps/
%   Reference: Moreland, Kenneth, 2009, Diverging Color Maps for Scientific 
%   Visualization, in Proceedings of the 5th International Symposium on 
%   Visual Computing.
%   The Matlab code is after haxby.m by Kelsey Jordahl, Marymount Manhattan
%   College.
%
%   See also HSV, GRAY, PINK, COOL, BONE, COPPER, FLAG, HOT
%   COLORMAP, RGBPLOT, HAXBY.

% Mark Brandon
% Yale University
% Time-stamp: <Aug 20 2012>

% Modification:
% 
% Wenqiang Zhang
% McGill University
% Jan 5 2023
% 
% im=imread('coolwarm_ext.png');
% c=squeeze(double(im(fix(end/2),:,:)));
% (or)
% c=squeeze(double(:,im(fix(end/2),:)));

%% Check inputs
narginchk(0,1);

if nargin == 1
    validateattributes(m,{'numeric'},{'numel',1});
end

%% Begin Function
if nargin < 1, m = size(get(gcf,'colormap'),1); end
c=[...
2 9 89;
3 10 90;
4 11 91;
5 13 92;
7 15 93;
8 16 94;
9 18 94;
11 20 95;
12 21 96;
13 23 97;
14 26 98;
15 27 99;
15 28 100;
16 30 101;
17 32 102;
17 33 103;
18 35 104;
19 37 105;
20 40 107;
21 41 108;
21 42 108;
22 43 109;
23 46 111;
24 48 112;
25 49 113;
27 52 115;
29 55 117;
30 59 120;
31 61 121;
31 63 122;
33 66 124;
34 68 126;
34 70 126;
36 73 128;
37 75 129;
38 76 130;
39 79 131;
41 82 133;
42 85 135;
43 86 136;
45 88 137;
47 91 139;
48 92 140;
48 94 140;
49 95 141;
51 97 142;
52 99 142;
53 100 143;
54 102 144;
56 104 145;
57 106 146;
58 108 147;
59 110 148;
61 113 149;
62 115 150;
63 116 151;
65 119 153;
66 121 155;
67 122 156;
69 124 158;
70 126 159;
72 128 160;
73 129 161;
74 131 163;
77 136 166;
79 138 168;
80 139 169;
81 141 170;
83 143 172;
85 146 174;
86 147 175;
87 150 176;
89 153 178;
90 154 179;
92 156 181;
94 159 183;
96 161 185;
98 163 186;
99 164 187;
101 166 189;
103 168 191;
105 170 193;
107 173 195;
110 176 197;
112 178 199;
114 179 201;
115 181 202;
118 184 205;
121 187 208;
123 189 209;
127 192 211;
132 195 213;
136 199 216;
139 201 217;
141 203 219;
145 206 221;
148 209 223;
150 210 223;
153 212 225;
155 213 225;
157 214 226;
161 216 227;
164 218 229;
167 220 230;
169 221 231;
172 223 232;
177 225 233;
179 226 234;
181 227 235;
183 228 236;
186 230 237;
190 231 238;
192 233 239;
194 234 240;
196 236 241;
198 237 242;
201 238 243;
203 240 244;
207 241 245;
209 242 246;
210 243 247;
216 244 245;
221 244 243;
225 244 242;
231 245 239;
236 245 237;
239 245 236;
243 245 235;
245 246 236;
244 248 241;
245 247 239;
246 246 235;
248 244 231;
250 242 224;
252 240 217;
252 239 215;
252 236 212;
251 233 208;
250 232 205;
250 229 202;
249 225 197;
248 222 192;
248 219 188;
247 217 185;
246 214 181;
246 210 177;
245 209 175;
245 205 171;
244 201 168;
243 199 166;
243 197 163;
243 195 161;
242 190 156;
241 187 153;
241 185 151;
240 182 148;
239 179 145;
238 175 141;
238 173 140;
238 171 138;
236 168 135;
236 165 132;
236 163 130;
234 160 128;
234 158 126;
234 155 124;
233 152 122;
232 149 119;
230 145 116;
229 143 114;
228 140 111;
227 135 108;
226 133 106;
226 131 104;
225 128 103;
224 125 100;
223 121 97;
222 119 95;
221 116 92;
220 114 90;
219 112 88;
218 110 86;
216 107 84;
215 104 82;
213 102 80;
212 101 79;
209 97 76;
207 94 73;
205 92 71;
202 88 69;
199 85 66;
198 83 64;
196 81 63;
194 78 61;
190 73 58;
188 71 56;
187 69 55;
185 67 54;
183 64 53;
181 61 51;
180 59 50;
178 57 49;
176 54 47;
175 53 46;
173 51 45;
171 49 43;
169 47 42;
168 45 41;
166 43 39;
164 42 38;
163 41 37;
161 39 36;
160 37 35;
158 35 34;
156 33 33;
156 32 32;
155 31 31;
152 27 30;
151 26 29;
151 25 29;
148 24 29;
146 23 29;
144 22 30;
143 21 29;
141 21 29;
139 19 29;
138 19 30;
138 19 30;
136 18 32;
134 18 32;
133 17 32;
131 16 33;
129 16 34;
127 15 35;
126 15 35;
125 15 36;
122 15 38;
121 15 39;
120 15 40;
119 16 41;
117 16 42;
116 16 43;
114 16 45;
112 16 46;
111 16 46;
109 16 47;
108 16 47;
106 16 48;
104 16 49;
102 16 49;
101 16 50;
99 17 50;
97 17 50;
96 18 51;
94 19 52;
92 19 52;
91 19 53;
90 20 53;
];
%... Interpolate get requested size for color table
pp=1:(m-1)/(size(c,1)-1):m;
r=interp1(pp,c(:,1),1:m);
g=interp1(pp,c(:,2),1:m);
b=interp1(pp,c(:,3),1:m);
%... Normalize to range [0,1], and divide again by maximum value
% to correct for round-off errors associated with the interpolation.
map=[r' g' b']/255;
map = map/max(map(:));
